#Iniial set-up ---------------
library(ordinal)
library(tidyverse)
library(rstan)
library(bridgesampling)
library(shinystan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(123)
#--Set APA theme to use with ggplot
theme_set(theme_bw(18)+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
strip.background=element_blank(),
strip.text = element_text(face="bold"),
axis.line=element_line(),
text=element_text(family="serif")))
#Read in data
full_data <- read_csv("C:/Users/sarah/Desktop/psylab/clean_df.csv")
#Create readable labels for plotting.
#full_data <- mutate(full_data, condition = ifelse(ingroupNorm==1 & bothShown==0, "Ingroup norm favoured \n leaving robber alone \n Only ingroup norm shown",
#ifelse(ingroupNorm==0 & bothShown==0, "Ingroup norm favoured \n calling the police \n Only ingroup norm shown",
#ifelse(ingroupNorm==1 & bothShown==1, "Ingroup norm favoured \n leaving robber alone \n Both norms shown",
# "Ingroup norm favoured \n calling the police \n Both norms shown"))))
full_data$responseLabels <- ordered(full_data$response, labels = c("1 = Definitely call the police", "2", "3", "4", "5", "6 = Definitely leave the robber alone"))
#Frequentist Analysis----------------
ordinal <- clm(as.factor(response)~ingroupNorm*bothShown, data=full_data)
full_data <- mutate(full_data, ingroupNorm = ~ if(str_contains(full_data['condition'],"Approximately 85% of participants in a previous study who disagreed with you", ignore.case = FALSE, logic = NULL, switch = FALSE))
View(full_data)
full_data <- mutate(full_data, ingroupNorm = ifelse(str_contains(full_data['condition'],"Approximately 85% of participants in a previous study who disagreed with you", ignore.case = FALSE, logic = NULL, switch = FALSE)))
full_data <- mutate(full_data, ingroupNorm = ifelse(str_contains(full_data['condition'],"Approximately 85% of participants in a previous study who disagreed with you")))
library(sjmisc)
#analysis_outgroup_plan
install.packages(sjmisc)
#analysis_outgroup_plan
install.packages("sjmisc")
#Iniial set-up ---------------
library(sjmisc)
full_data <- mutate(full_data, ingroupNorm = ifelse(str_contains(full_data['condition'],"Approximately 85% of participants in a previous study who disagreed with you")))
full_data <- mutate(full_data, ingroupNorm = ifelse(str_contains(full_data['condition'],"Approximately 85% of participants in a previous study who disagreed with you"), FALSE, TRUE))
View(full_data)
full_data <- mutate(full_data, ingroupNorm = ifelse(str_contains(full_data['condition'],"Approximately 85% of participants in a previous study who disagreed with you"), "0", "1"))
View(full_data)
#Iniial set-up ---------------
library(sjmisc)
library(ordinal)
library(tidyverse)
library(rstan)
library(bridgesampling)
library(shinystan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(123)
#--Set APA theme to use with ggplot
theme_set(theme_bw(18)+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
strip.background=element_blank(),
strip.text = element_text(face="bold"),
axis.line=element_line(),
text=element_text(family="serif")))
#Read in data
full_data <- read_csv("C:/Users/sarah/Documents/Documents/Uni/Experimental_psychology_lab/Our_project/XPLab_Conformity/Analyses/main/clean_df.csv")
#Remove unusable participants (answered understanding check wrong or didn't identify an ingroup/outgroup in later experiments.)
#useable_data <- filter(full_data,
#understandingCheckResponse==1,
#RepublicanRating!=DemocraticRating | is.na(RepublicanRating!=DemocraticRating), #Exclude participants who were indifferent between the parties for Exp 2
t#opIssueRating!=5 | is.na(topIssueRating!=5) #Exclude participants who were indifferent to their chosen issue in Exp 3 and 4
View(full_data)
#Read in data
full_data <- read_csv("C:/Users/sarah/Documents/Documents/Uni/Experimental_psychology_lab/Our_project/XPLab_Conformity/Analyses/main/df_for_modeling.csv")
#Remove unusable participants (answered understanding check wrong or didn't identify an ingroup/outgroup in later experiments.)
#useable_data <- filter(full_data,
#understandingCheckResponse==1,
#RepublicanRating!=DemocraticRating | is.na(RepublicanRating!=DemocraticRating), #Exclude participants who were indifferent between the parties for Exp 2
t#opIssueRating!=5 | is.na(topIssueRating!=5) #Exclude participants who were indifferent to their chosen issue in Exp 3 and 4
View(full_data)
#Frequentist Analysis----------------
ordinal <- clm(as.factor(preference)~ingroupNorm*bothShown, data=full_data)
print(ordinal)
#Bayesian analysis------------
#--Set up data for stan.
useable_data <- useable_data %>%
select(preference, ingroupNorm, bothShown, ingroupAgree, outgroupDisagree) %>% #select relevant columns
mutate(ingroupAgree = ifelse(is.na(ingroupAgree), 1, ingroupAgree), #For experiments 1 and 2 we assumed that participants identified with the ingroup and not with the outgroup.
outgroupDisagree = ifelse(is.na(outgroupDisagree), 1, outgroupDisagree)
)
#Bayesian analysis------------
#--Set up data for stan.
useable_data <- full_data %>%
select(preference, ingroupNorm, bothShown, ingroupAgree, outgroupDisagree) %>% #select relevant columns
mutate(ingroupAgree = ifelse(is.na(ingroupAgree), 1, ingroupAgree), #For experiments 1 and 2 we assumed that participants identified with the ingroup and not with the outgroup.
outgroupDisagree = ifelse(is.na(outgroupDisagree), 1, outgroupDisagree)
)
stan_data_all <- as.list(c(useable_data, N = dim(useable_data)[1]))
#--Fit models
fit_SCT_1 <- stan(file = "analysis/stan_models/SCT.stan", data=stan_data1, iter=10000, chains=4, seed = 123, control=list(adapt_delta = 0.99))
fit_SCT_all <- stan(file = "analysis/stan_models/SCT.stan", data=stan_data_all, iter=10000, chains=4, seed = 123, control=list(adapt_delta = 0.99))
fit_SCT_all <- stan(file = "C:/Users/sarah/Documents/Documents/Uni/Experimental_psychology_lab/Our_project/XPLab_Conformity/Analyses/main/stan_models/SCT.stan", data=stan_data_all, iter=10000, chains=4, seed = 123, control=list(adapt_delta = 0.99))
fit_herding_all <- stan(file = "C:/Users/sarah/Documents/Documents/Uni/Experimental_psychology_lab/Our_project/XPLab_Conformity/Analyses/main/stan_models/herding.stan", data=stan_data_all, iter=10000, chains=4, control=list(adapt_delta = 0.99))
#Iniial set-up ---------------
library(sjmisc)
library(ordinal)
full_data["response"] <- full_data["preference"]
View(full_data)
#Frequentist Analysis----------------
ordinal <- clm(as.factor(preference)~ingroupNorm*bothShown, data=full_data)
print(ordinal)
#Bayesian analysis------------
#--Set up data for stan.
useable_data <- full_data %>%
select(preference, ingroupNorm, bothShown, ingroupAgree, outgroupDisagree) %>% #select relevant columns
mutate(ingroupAgree = ifelse(is.na(ingroupAgree), 1, ingroupAgree), #For experiments 1 and 2 we assumed that participants identified with the ingroup and not with the outgroup.
outgroupDisagree = ifelse(is.na(outgroupDisagree), 1, outgroupDisagree)
)
stan_data_all <- as.list(c(useable_data, N = dim(useable_data)[1]))
fit_SCT_all <- stan(file = "C:/Users/sarah/Documents/Documents/Uni/Experimental_psychology_lab/Our_project/XPLab_Conformity/Analyses/main/stan_models/SCT.stan", data=stan_data_all, iter=10000, chains=4, seed = 123, control=list(adapt_delta = 0.99))
#Bayesian analysis------------
#--Set up data for stan.
useable_data <- full_data %>%
select(response, ingroupNorm, bothShown, ingroupAgree, outgroupDisagree) %>% #select relevant columns
mutate(ingroupAgree = ifelse(is.na(ingroupAgree), 1, ingroupAgree), #For experiments 1 and 2 we assumed that participants identified with the ingroup and not with the outgroup.
outgroupDisagree = ifelse(is.na(outgroupDisagree), 1, outgroupDisagree)
)
stan_data_all <- as.list(c(useable_data, N = dim(useable_data)[1]))
fit_SCT_all <- stan(file = "C:/Users/sarah/Documents/Documents/Uni/Experimental_psychology_lab/Our_project/XPLab_Conformity/Analyses/main/stan_models/SCT.stan", data=stan_data_all, iter=10000, chains=4, seed = 123, control=list(adapt_delta = 0.99))
fit_herding_all <- stan(file = "C:/Users/sarah/Documents/Documents/Uni/Experimental_psychology_lab/Our_project/XPLab_Conformity/Analyses/main/stan_models/herding.stan", data=stan_data_all, iter=10000, chains=4, control=list(adapt_delta = 0.99))
#--Compare models using Bayes Factors
marg_lik_SCT_1 <- bridge_sampler(samples = fit_SCT_1)
marg_lik_SCT_all <- bridge_sampler(samples = fit_SCT_all)
marg_lik_herding_all <- bridge_sampler(samples = fit_herding_all)
bf(marg_lik_herding_all,marg_lik_SCT_all)
#----Check diagnostics
launch_shinystan(fit_SCT_1)
#----Check diagnostics
launch_shinystan(fit_SCT_all)
install.packages("pkgbuild")
install.packages("pkgbuild")
install.packages("pkgbuild")
rt_path = gsub("\\","/",pkgbuild::rtools_path(),fixed=T)
install.packages("pkgbuild")
install.packages("pkgbuild")
install.packages("pkgbuild")
install.packages("pkgbuild")
rt_path = gsub("\\","/",pkgbuild::rtools_path(),fixed=T)
rt_bin = paste0(substr(rt_path,1,nchar(rt_path)-4),"/mingw_$(WIN)/bin/")
writeLines(paste0('PATH="',rt_path,';${PATH}"'), con = "~/.Renviron")
writeLines(paste0('Sys.setenv(BINPREF = "',rt_bin,'")'), con = "~/.Rprofile")
